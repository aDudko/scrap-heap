package com.udemy.pattern.generative;
/**
 Гарантирует, что у класса есть только один экземпляр,
 и предоставляет к нему глобальную точку доступа.

 ТАК ЖЕ ИЗВЕСТЕН КАК:
 Одиночка

 ПРИМЕНИМОСТЬ:
 * Когда в программе должен быть единственный экземпляр какого-то
 класса, доступный всем клиентам (например, общий доступ к базе
 данных из разных частей программы).
 * Когда вам хочется иметь больше контроля над глобальными переменными.

 ПРЕИМУЩЕСТВА И НЕДОСТАТКИ:
 + Реализует отложенную инициализацию объекта-одиночки.
 - Нарушает принцип единственной ответственности класса.
 - Маскирует плохой дизайн.
 - Проблемы многопоточности.
 - Требует постоянного создания Mock-объектов при юнит-тестировании.
*/

public class Singleton {
    public static void main(String[] args) {

    }
}
